pico-8 cartridge // http://www.pico-8.com
version 34
__lua__
--objects
--game
game = {}
function game:new(o)
	o = o or {}
	setmetatable(o, self)
	self.world=world:new()
	self.__index=self
	return o
end
function game:update()
	self.world:update()
end
function game:draw()
	cls()
	self.world:draw()
end

--world
world = {
	friction=0.9,
	gravity=3,
	columns=16,
	rows=16,
	tile=8,
}
function world:new(o)
	o = o or {}
	setmetatable(o, self)
	self.collider=collider:new()
	self.player=player:new()
	self.height=self.tile*self.rows
	self.width=self.tile*self.columns
	self.__index=self
	return o
end
function world:collideobj(obj)
	--block obj to world boundaries
	if obj:getleft()<0 then obj:setleft(0) obj.vel_x=0
	elseif obj:getright()>self.width then obj:setright(self.width) obj.vel_x=0 end
	if obj:gettop()<0 then obj:settop(0) obj.vel_y=0
	elseif obj:getbottom()>self.height then obj:setbottom(self.height) obj.vel_y=0 obj.jumping=false end

	local value=0
	local top=flr(obj:gettop()/self.tile)
	local left=flr(obj:getleft()/self.tile)
	local right=flr(obj:getright()/self.tile)
	local bottom=flr(obj:getbottom()/self.tile)
	
	value=col_map(top,left)
	self.collider:collide(value,obj,left*self.tile,top*self.tile,self.tile)

	value=col_map(top,right)
	self.collider:collide(value,obj,right*self.tile,top*self.tile,self.tile)

	value=col_map(bottom,left)
	self.collider:collide(value,obj,left*self.tile,bottom*self.tile,self.tile)

	value=col_map(bottom,right)
	self.collider:collide(value,obj,right*self.tile,bottom*self.tile,self.tile)
end
function world:update()
	self.player.vel_y+=self.gravity
	self.player:update()

	self.player.vel_x*=self.friction
	self.player.vel_y*=self.friction

	self:collideobj(self.player)
end
function world:draw()
	map(0,0)
	self.player:draw()
end

--collider
collider = {}
function collider:new(o)
	o = o or {}
	setmetatable(o, self)
	self.__index=self
	return o
end
function collider:collide(value,obj,t_x,t_y,t_size)
	if value==1 then self:coltop(obj,t_y)
	elseif value==2 then self:colright(obj,t_x+t_size)
	elseif value==3 then
		if self:coltop(obj,t_y) then return end
		self:colright(obj,t_x+t_size)
	elseif value==4 then self:colbottom(obj,t_y+t_size)
	elseif value==5 then
		if self:coltop(obj,t_y) then return end
		self:colbottom(obj,t_y+t_size)
	elseif value==6 then
		if self:colright(obj,t_x+t_size) then return end
		self:colbottom(obj,t_y+t_size)
	elseif value==7 then
		if self:coltop(obj,t_y) then return end
		if self:colright(obj,t_x+t_size) then return end
		self:colbottom(obj,t_y+t_size)
	elseif value==8 then self:colleft(obj,t_x)
	elseif value==9 then
		if self:coltop(obj,t_y) then return end
		self:colleft(obj,t_x)
	elseif value==10 then
		if self:colleft(obj,t_x) then return end
		self:colright(obj,t_x+t_size)
	elseif value==11 then
		if self:coltop(obj,t_y) then return end
		if self:colleft(obj,t_x) then return end
		self:colright(obj,t_x+t_size)
	elseif value==12 then
		if self:colleft(obj,t_x) then return end
		self:colbottom(obj,t_y+t_size)
	elseif value==13 then
		if self:coltop(obj,t_y) then return end
		if self:colleft(obj,t_x) then return end
		self:colbottom(obj,t_y+t_size)
	elseif value==14 then
		if self:colleft(obj,t_x) then return end
		if self:colright(obj,t_x+t_size) then return end
		self:colbottom(obj,t_y+t_size)
	elseif value==15 then
		if self:coltop(obj,t_y) then return end
		if self:colleft(obj,t_x) then return end
		if self:colright(obj,t_x+t_size) then return end
		self:colbottom(obj,t_y+t_size)
	else return end
end
function collider:coltop(obj,tile)
	if (obj:getbottom()>tile) and (obj:getoldbottom()<=tile) then
		obj:setbottom(tile-0.01)
		obj.vel_y=0
		obj.jumping=false
		return true
	end
	return false
end
function collider:colbottom(obj,tile)
	if (obj:gettop()<tile) and (obj:getoldtop()>=tile) then
		obj:settop(tile)
		obj.vel_y=0
		return true
	end
	return false
end
function collider:colleft(obj,tile)
	if (obj:getright()>tile) and (obj:getoldright()<=tile) then
		obj:setright(tile-0.01) --.01 to fix round issue
		obj.vel_x=0
		return true
	end
	return false
end
function collider:colright(obj,tile)
	if (obj:getleft()<tile) and (obj:getoldleft()>=tile) then
		obj:setleft(tile)
		obj.vel_x=0
		return true
	end
	return false
end

--object
object = {
	x=0,
	y=0,
	width=0,
	height=0,
}
function object:new(o)
	o = o or {}
	setmetatable(o, self)
	self.x_old=self.x
	self.y_old=self.y
	self.__index=self
	return o
end
function object:getbottom() return self.y+self.height end
function object:getbottom() return self.y+self.height end
function object:getleft() return self.x end
function object:getright() return self.x+self.width end
function object:gettop() return self.y end
function object:getoldbottom() return self.y_old+self.height end
function object:getoldleft() return self.x_old end
function object:getoldright() return self.x_old+self.width end
function object:getoldtop() return self.y_old end
function object:setbottom(y) self.y=y-self.height end
function object:setleft(x) self.x=x end
function object:setright(x) self.x=x-self.width end
function object:settop(y) self.y=y end
function object:setoldbottom(y) self.y_old=y-self.height end
function object:setoldleft(x) self.x_old=x end
function object:setoldright(x) self.x_old=x-self.width end
function object:setoldtop(y) self.y_old=y end

player=object:new({x=-59,y=59,width=8,height=8})
function player:new(o)
	o = o or {}
	setmetatable(o, self)
	self.spr=1
	self.jumping=true
	self.vel_x=0
	self.vel_y=0
	self.acc=0.5
	self.v_jump=20
	self.__index=self
	return o
end
function player:jump()
	if not self.jumping then
		self.jumping=true
		self.vel_y-=self.v_jump
	end
end
function player:moveleft() self.vel_x-=self.acc end
function player:moveright() self.vel_x+=self.acc end
function player:update()
	self.x_old=self.x
	self.y_old=self.y
	self.x+=self.vel_x
	self.y+=self.vel_y
	if btn(⬅️) then self:moveleft() end
	if btn(➡️) then self:moveright() end
	if btn(❎) then self:jump() end
end
function player:draw()
	spr(self.spr,flr(self.x),flr(self.y),1,1)
end

function _init()
	game1=game:new()
end

function _update()
	game1:update()
end

function _draw()
	game1:draw()
end

--utils
function col_map(x,y)
	local sum=0
	if fget(mget(x,y),0) then sum+=1 end
	if fget(mget(x,y),1) then sum+=2 end
	if fget(mget(x,y),2) then sum+=4 end
	if fget(mget(x,y),3) then sum+=8 end
	return sum
end
__gfx__
00000000066000600660006006660006060600066006000660660006006600066660000660006000000000000000000000000000000000000000000000000000
00000000606ccc60606ccc606006ccc66066ccc60666ccc60606ccc60606ccc60066ccc606000600000000000000000000000000000000000000000000000000
00700700006736300067363000067363000673630006736300067363600673630006736306ccc600000000000000000000000000000000000000000000000000
00077000006ffff0006ffef00006ffef0006ffef0006ffef0006ffef0006ffef0006ffef06736300000000000000000000000000000000000000000000000000
0007700000066000006666000066660000666600006666000066660000666000000066600fffef00000000000000000000000000000000000000000000000000
00700700006776000607706006077060060770600607706006077060060770000000770600677660000000000000000000000000000000000000000000000000
00000000060d5060000d50000dd0500000d500000dd05000005d0000005d000000000d50060d5000000000000000000000000000000000000000000000000000
0000000000d0050000d005000000500000d5000000005000005d000005d00000000000d50000d550000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb00bbbbbbbbbbbb0000000000000000000000000000000000000000000000000000000000000000000000000000000000
3b33bbb33b3bbb333b333bb3bbbbb33b0bbbb3b3bbb3bbb000000000000000000000000000000000000000000000000000000000000000000000000000000000
33223b323b33bb2233223b3233bbb323bb3b32323b323bbb00000000000000000000000000000000000000000000000000000000000000000000000000000000
222523222323b322222223b223bb3222bbb33222232233bb00000000000000000000000000000000000000000000000000000000000000000000000000000000
222222222223322229222332223b3229bb32222d222223bb00000000000000000000000000000000000000000000000000000000000000000000000000000000
222222d2222222922222223222232222b33222222922223b00000000000000000000000000000000000000000000000000000000000000000000000000000000
2922222222222222222212222f222222bb32f2222222223b00000000000000000000000000000000000000000000000000000000000000000000000000000000
2222222222d222222222222222222222332222222222e22300000000000000000000000000000000000000000000000000000000000000000000000000000000
22222222222222222222222222222222000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
22922222292222222222d22222229222000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
22222f22222255222222222222277772000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
2222222222225152292266222127d7d2000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
22d22222222225522225666222266662000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
22222222222d22222225555222226622000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
222222e2222222222222222222222222000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
22222222222222222222222222222222000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
22222222222222221111111111111111000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
e2eee2eee2eee2eec1ccc1ccc1ccc1cc000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
e2eee2eee2eee2eec1ccc1ccc1ccc1cc000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
22222222222222221111111111111111000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
ee2eee2eee2eee2ecc1ccc1ccc1ccc1c000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
ee2eee2eee2eee2ecc1ccc1ccc1ccc1c000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
22222222222222221111111111111111000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
002ee20000000000001cc10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
002ee200002ee200001cc100001cc100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
002e2200002ee200001c1100001cc100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
002ee200002ee200001cc100001cc100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
002ee20000222200001cc10000111100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
002ee200002ee200001cc100001cc100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0022e200002ee2000011c100001cc100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
002ee200002ee200001cc100001cc100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
002ee200002ee200001cc100001cc100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__gff__
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000f0f0f0f0f0f000000000000000000000f0f0f0f0000000000000000000000000101010100000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__map__
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
4040404040404040404040404040404000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
